admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: main-listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 51051 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: grpc_json
                codec_type: AUTO
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: [ "*" ]
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, PATCH
                        allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding
                      routes:
                        # Add grpc:{} means that requests are only forwarded if they are found in the grpc service definition, returning 404 for others
                        # Removing it for cors and leaving Envoy to handle OPTIONS requests
                        # Ref: https://github.com/envoyproxy/envoy/issues/7833#issuecomment-518837766
                        - match: { prefix: "/" }
                          route: { cluster: grpc-backend-services, timeout: { seconds: 60 }}
                http_filters:
                  - name: envoy.filters.http.grpc_json_transcoder
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                      proto_descriptor: "/data/reservation_service_definition.pb"
                      services: [ "reservations.v1.ReservationService" ]
                      print_options:
                        add_whitespace: true
                        always_print_primitive_fields: true
                        always_print_enums_as_ints: false
                        preserve_proto_field_names: false
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.router

  clusters:
    - name: grpc-backend-services
      connect_timeout: 1.25s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      http2_protocol_options: { }
      hosts:
        - socket_address:
            address: host.docker.internal
            port_value: 53000
